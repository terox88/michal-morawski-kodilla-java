show DATABASES;
create DATABASE kodilla_course;
create user 'kodilla_user' identified with MYSQL_NATIVE_PASSWORD by 'kodilla_Pass123';
grant ALL PRIVILEGES ON kodilla_course.* to kodilla_user;
show TABLES;
CREATE TABLE  USERS
(
ID SERIAL PRIMARY KEY,
FIRSTNAME VARCHAR(100),
LASTNAME VARCHAR(100)
);
CREATE TABLE POSTS
(
    ID SERIAL PRIMARY KEY,
    USER_ID BIGINT UNSIGNED NOT NULL,
    BODY VARCHAR(1024),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);
SELECT * FROM USERS;
INSERT INTO users (FIRSTNAME, LASTNAME) VALUES ('John', 'Smith');
COMMIT;
INSERT INTO posts (USER_ID, BODY) VALUES (1, 'This is my first post on this forum');
COMMIT;
SELECT * FROM posts;

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Zachary', 'Lee');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Stephanie', 'Kovalsky');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Thomas', 'Landgren');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('John', 'Thomson');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'This is my first post too!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'How are you?');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (1, 'Quite good, thanks bro!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (4, 'Yo all! Here is Thomas!');

COMMIT;

CREATE TABLE ISSUESLISTS
(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(50)
);
CREATE TABLE ISSUES
(
    ID SERIAL PRIMARY KEY,
    ISSUESLIST_ID BIGINT UNSIGNED NOT NULL,
    SUMMARY VARCHAR(100),
    DESCRIPTION VARCHAR(1000),
    USER_ID_ASSIGNEDTO BIGINT UNSIGNED NOT NULL,
    FOREIGN KEY (ISSUESLIST_ID) REFERENCES ISSUESLISTS (ID),
    FOREIGN KEY (USER_ID_ASSIGNEDTO) REFERENCES USERS (ID)
);
INSERT INTO ISSUESLISTS (NAME) VALUES ('ToDo');
INSERT INTO ISSUESLISTS (NAME) VALUES ('In progress');
INSERT INTO ISSUESLISTS (NAME) VALUES ('Done');

SELECT * FROM ISSUESLISTS;
SELECT * FROM ISSUES;

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (1, 'Shopping', 'Buy milk', 3);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (1,'Cleaning', 'Vacuum living room', 1);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (1, 'Shopping', 'Buy clothes', 2);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (1, 'Driving', 'Take John to airport', 2);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (1, 'Cleaning', 'Clean bathroom', 4);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (2, 'Shopping', 'Buy flowers for today show', 3);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (2, 'Learning', 'Learn SQL', 2);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (2, 'Cleaning', 'wash windows', 3);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (2, 'Driving', 'Pickup Stephanie from flower store', 1);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (2, 'Shopping', 'Buy water', 4);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (3, 'Shopping', 'Buy bread', 2);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (3, 'Maintenance', 'Fix sinking tap', 4);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (3, 'Learning', 'Learn polish', 3);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (3, 'Driving', 'Take grandma to doctor',5 );
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (3, 'Cleaning', 'Clean kitchen', 2);
COMMIT;
SELECT ID, LASTNAME FROM USERS;
SELECT ID, FIRSTNAME FROM USERS WHERE ID >= 3;
SELECT COUNT(*) FROM USERS;
SELECT MIN(ID), MAX(ID) FROM USERS;
SELECT SUM(ID) AS TOTAL, AVG(ID) AS AVERAGE FROM USERS;
SELECT U.FIRSTNAME, U.LASTNAME, P.BODY FROM USERS U JOIN POSTS P ON U.ID = P.USER_ID;
SELECT USER_ID, COUNT(*) AS POSTS_NUMBER FROM POSTS
GROUP BY  USER_ID
HAVING COUNT(*) > 1;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS POSTSNUMBER
FROM USERS U JOIN POSTS P ON U.ID = P.USER_ID
GROUP BY P.USER_ID
HAVING COUNT(*) >1
ORDER BY U.FIRSTNAME, U.LASTNAME;

SELECT I.SUMMARY, I.DESCRIPTION, IL.NAME FROM ISSUES I
JOIN ISSUESLISTS IL ON I.ISSUESLIST_ID = IL.ID;

SELECT I.SUMMARY, I.DESCRIPTION, U.FIRSTNAME, U.LASTNAME FROM ISSUES I
JOIN USERS U ON I.USER_ID_ASSIGNEDTO = U.ID;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS ISSUENUMBER
FROM USERS U JOIN ISSUES I ON U.ID = I.USER_ID_ASSIGNEDTO
GROUP BY  I.USER_ID_ASSIGNEDTO;

